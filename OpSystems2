package com.company;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;



public class Main {

    public static void main(String[] args) {
        String pass1 = "1115dd800feaacefdf481f1f9070374a2a81e27880f187396db67958b207cbad";
        String pass2 = "3a7bd3e2360a3d29eea436fcfb7e44c735d117c42d1c1835420b6b9942dd4f1b";
        String pass3 = "74e1bb62f8dabb8125a58852b63bdf6eaef667cb56ac7f7cdba6d7305c50a22f";
        Brut brut1 = new Brut();
        Brut brut2 = new Brut();
        Brut brut3 = new Brut();
        brut1.pass = pass1;
        brut2.pass = pass2;
        brut3.pass = pass3;
        brut1.start();
        brut2.start();
        brut3.start();
    }
}

class Brut extends Thread {
    String pass;

    public void run() {
        String str1 = "";
        int a = 1;
        while (a != 0) {
            for (char a5 = 'a'; a5 <= 'z'; a5++) {
                for (char a4 = 'a'; a4 <= 'z'; a4++) {
                    for (char a3 = 'a'; a3 <= 'z'; a3++) {
                        for (char a2 = 'a'; a2 <= 'z'; a2++) {
                            for (char a1 = 'a'; a1 <= 'z'; a1++) {
                                str1 = "" + Character.toString(a5) + Character.toString(a4) + Character.toString(a3) + Character.toString(a2) + Character.toString(a1);
                                try {
                                    MessageDigest md = MessageDigest.getInstance("SHA-256");
                                    byte[] hashInBytes = md.digest(str1.getBytes(StandardCharsets.UTF_8));
                                    String sb = "";
                                    for (byte b : hashInBytes) {
                                        sb += String.format("%02x", b);
                                    }
                                    if (pass.equals(sb)) {
                                        System.out.println(str1 + " имеет хэш " + pass);
                                        a = 0;
                                        break;
                                    }
                                } catch (NoSuchAlgorithmException e) {
                                    throw new IllegalStateException(e);
                                }
                            }
                            if (a == 0) {
                                break;
                            }
                        }
                        if (a == 0) {
                            break;
                        }
                    }
                    if (a == 0) {
                        break;
                    }
                }
                if (a == 0) {
                    break;
                }
            }
            a = 0;
        }
    }
}
