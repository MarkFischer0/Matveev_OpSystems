using System;
using System.Threading;
using System.Collections.Generic;

namespace OpSystems3
{
    class Program
    {
        static bool mark = true;
        public static Queue<int> queue = new Queue<int>();

        static void ProdFirst()
        {
            Random ran1 = new Random();
            while (mark)
            {
                if ((queue.Count <= 100) & (queue.Count > 80))
                {
                    int qadd = ran1.Next(1, 100);
                    queue.Enqueue(qadd);
                    Console.WriteLine("Первый производитель добавляет элемент    " + qadd);
                    Thread.Sleep(300);
                }
            }
        }

        static void ProdSecond()
        {
            Random ran2 = new Random();
            while (mark)
            {
                if ((queue.Count <= 100) & (queue.Count > 80))
                {
                    int qadd = ran2.Next(1, 100);
                    queue.Enqueue(qadd);
                    Console.WriteLine("Второй производитель добавляет элемент.    " + qadd);
                    Thread.Sleep(300);
                }
            }
        }

        static void Prodthird()
        {
            Random ran3 = new Random();
            while (mark)
            {
                if ((queue.Count <= 100) & (queue.Count > 80))
                {
                    int qadd = ran3.Next(1, 100);
                    queue.Enqueue(qadd);
                    Console.WriteLine("Третий производитель добавляет элемент.    " + qadd);
                    Thread.Sleep(300);
                }
            }
        }

        static void UserFirst()
        {
            while (mark)
            {
                queue.Dequeue();
                Console.WriteLine("Первый потребитель берёт элемент.");
                Thread.Sleep(300);
            }
        }

        static void UserSecond()
        {
            while (mark)
            {
                queue.Dequeue();
                Console.WriteLine("Второй потребитель берёт элемент." + "         " + queue.Count);
                Thread.Sleep(300);
            }
        }

        static void Main(string[] args)
        {
            Thread gen1 = new Thread(ProdFirst);
            Thread gen2 = new Thread(ProdSecond);
            Thread gen3 = new Thread(Prodthird);
            Thread user1 = new Thread(UserFirst);
            Thread user2 = new Thread(UserSecond);

            Random queueR = new Random();
            for (int i = 0; i < 200; i++)
            {
                queue.Enqueue(queueR.Next(1, 100));
            }

            gen1.Start();
            gen2.Start();
            gen3.Start();
            user1.Start();
            user2.Start();
            while (true)
            {
                ConsoleKeyInfo key = Console.ReadKey(true);

                if (key.Key == ConsoleKey.Q)
                {
                    mark = false;
                    Environment.Exit(0);
                }
            }
        }
    }
}
